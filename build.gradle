plugins {
    id 'java-library'
    id 'info.solidsoft.pitest' version '1.5.1'
    id 'maven-publish'
    id 'signing'
}

group = 'com.github.shnewto'
version = '1.0.1'

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    implementation 'com.google.cloud:google-cloud-bigquery:1.126.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.slf4j:slf4j-api:1.7.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'org.junit.platform:junit-platform-runner:1.7.0'
    testImplementation 'org.assertj:assertj-core:3.18.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
    useJUnitPlatform()
}

pitest {
    targetClasses = ['com.github.shnewto.bqjson.*']  //by default "${project.group}.*"
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
}

build.dependsOn 'pitest'

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'bqjson'
            from components.java
            pom {
                name = 'bqjson'
                description = 'Serialize/Deserialize BigQuery TableResults (and TableResult adjacent types) to/from JSON.'
                url = 'https://github.com/shnewto/bqjson'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/shnewto/bqjson/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'shnewto'
                        name = 'Shea Newton'
                        email = 'shnewto@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/shnewto/bqjson.git'
                    developerConnection = 'scm:git:ssh://github.com/shnewto/bqjson.git'
                    url = 'http://github.com/shnewto/bqjson/'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username project.property('ossrhUsername')
                password project.property('ossrhPassword')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}